Pandas
빅데이터 처리에 널리 사용되고 있는 파이썬 라이브러리
1차원 배열 형태를 가진 series와 2차원 배열 형태를 가진 dataFrame 제공

시리즈에서 인덱스는 데이터값과 일대일로 대응

파이썬 딕셔너리를 통해 판다스의 시리즈를 만들 수 있음
인덱스는 데이터값의 위치를 나타내는 주소의 역할

데이터프레임은 이 그림에서 볼 수 있듯이 2차원 배열 구조
여러 개의 시리즈가 모여 구성된 구조가 데이터프레임
데이터프레임에서 각 열이 시리즈를 나타냄
이를 열 벡터라 하면 데이터프레임은 여러 개의 열 벡터들이 순서대로 결합된 2차원 행렬이 됨
데이터프레임의 열은 공통의 속성을 나타내며, 행은 개별 데이터의 모임인 레코드

pandas의 Series는 인덱스를 가진 1차원 배열로서 넘파이의 1차원 array와 유사
리스트를 인자로 사용하여 시리즈 객체를 만들 수 있음
시리즈는 values와 index 속성을 갖고 있음
Series 변수의 values 값을 확인하면, 값에 해당하는 데이터가 array 형태로 추출
시리즈 변수의 index 값을 확인하면, index 범위 값만을 얻어낼 수 있음

Pandas의 Series에서는 정수가 아닌 명시적으로 정의된 인덱스를 사용하여 요솟값에 접근할 수 있음

문자열로 인덱스를 정의하여 사용할 수도 있지만, 인접하지 않거나 연속적이지 않은 정수들로 인덱스를 정의하여 사용할 수도 있음

Pandas의 Series 객체는 화면의 명령문과 같이 첫 번째 인자로 데이터를 지정하고, 그 다음에 index를 지정하는 형태로 만들 수 있음
index는 옵션이기 때문에 생략이 가능
생략이 되면, 기본값으로 인덱스에 0부터 연속된 정수로 할당

일반적으로 Series와 DataFrame 객체에는 인덱스 항목이 포함
판다스는 인덱스 용도로 활용할 수 있는 Index 객체를 지원
인덱스 객체는 불변 배열, 한번 값이 설정되면판다스의 Index 객체는 배열처럼 동작하며, 표준 파이썬 인덱싱 표기법을 사용하여 원하는 값이나 슬라이스, 즉 부분 값들을 가져올 수 있음
그 값을 변경할 수 없음
인덱스 객체의 불변성이라는 특징때문에 인덱스 변경으로 인한 부작용 없이 시리즈나 데이터프레임에서 인덱스를 좀 더 안전하게 사용하고 공유할 수 있다는 장점
Pandas 인덱스 객체에 집합 연산을 적용하여 인덱스 값을 정교하게 갱신
교집합은 &(엔퍼센트) 기호로, 합집합은 |(파이프) 기호로, 차집합은 ^(삿갓) 모양의 기호를 사용
iloc 인덱서를 사용하면 DataFrame 객체가 단순 Numpy 배열인 것처럼 정수형 위치를 사용할 수 있지만 DataFrame 인덱스와 열 라벨은 결과에 그대로 유지
시리즈 객체에 어떤 숫자를 더하면, 시리즈의 개별 원소에 각각의 숫자를 더하고 그 결과를 시리즈 객체로 반환
연산 결과로 NaN 값을 갖는 것을 피하기 위해 fill_value 옵션을 각 메소드에서 사용할 수 있음
데이터프레임에 임의의 숫자에 대해서 산술연산을 적용하면 데이터프레임의 모든 요소에 해당 숫자에 대해 산술연산을 수행

CSV는 comma-separated values의 약자이며, 이것은 필드들을 쉼표로 구분한 텍스트 데이터 및 텍스트 파일
읽고자 하는 파일 경로를 인자로 넘겨주면 해당 파일을 읽어서 데이터프레임으로 반환
처리 및 분석된 데이터를 판다스를 통해 CSV 형식으로 저장하는 경우는 to_csv() 함수를 사용
특정 데이터프레임에 info() 함수를 적용하면, 해당 데이터프레임에 관한 기본 정보를 알 수 있음
화면의 코드와 같이 데이터프레임 rc에 info() 함수를 수행하면 클래스 유형, 행 인텍스의 구성, 열 이름의 종류와 개수,
각 열의 데이터형과 개수, 메모리 할당량에 관한 정보가 나열됨
dtypes 속성을 활용해서 각 열의 데이터형 정보를 얻을 수 있음
특정 열에 대해서도 dtypes을 적용할 수 있음
데이터프레임에 describe() 함수를 적용하면, 산술이나 숫자 데이터로 구성된 각 열에 대해서 주요 통계 정보를 얻을 수 있음
인자로 dropna=True로 지정하면, 데이터 값 중에 NaN을 제외하고 개수를 셈
기본 값으로 drapna의 값은 FALSE로 설정되어mean() 함수는 데이터프레임의 각 열을 대상으로 평균값을 계산하고 그 결과를 시리즈 객체로 반환 있음

기본적으로 데이터 시각화를 위해서는 시각화 라이브러리로서 Matplotlib이라는 라이브러리를 주로 사용
판다스는 Matplotlib 라이브러리의 일부 기능을 내장하고 있어서, 별도로 임포트하지 않고도 그래프 기능을 활용할 수 있음
시리즈 또는 데이터프레임 객체에 plot() 시각화 내장 함수를 적용하면 바로 그래프로 그릴 수 있음
kind 값을 인자로 설정하여 그래프 종류를 선택할 수 있음
데이터프레임의 각 열은 시리즈 객체이므로 이에 대해서도 duplicated() 함수를 적용하여 열의 요소 값들에 대해서 중복 여부를 판별할 수 있음
중복 데이터를 제거하기 위해서는 drop_duplicates() 함수를 사용
이 함수는 중복되는 행들을 제거하고 고유한 값만을 가진 행들만을 남김

