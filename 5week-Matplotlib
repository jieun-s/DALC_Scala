맷플롯립의 가장 중요한 특징은 맷플롯립이 다양한 운영체제 위에서 동작하고 다양한 포맷으로 그래프를 생성할 수 있다는 것
일반적으로 단순한 그림을 빠르게 그릴 생각이라면 매트랩 스타일을 사용하고, 
여러가지 옵션을 적용하여 복잡한 그림을 그릴 때는 객체지향 인터페이스 스타일을 사용
객체지향 인터페이스에서는 현재 활성화된 상태의 그림이나 축의 개념에 의존하지 않고, 
명시적으로 그림(Figure)과 축(Axes) 객체를 생성하는 메서드를 사용

선 그림은 함수 y=f(x)를 시각화하는 경우
변수 x의 값이 연속적이고 이에 해당하는 y의 값을 시각화하여 x의 변화에 대한 y의 변화 또는 추세를 시각적으로 표시하기 위해 사용
모든 맷플롯립 플롯은 그림(figure)과 축(axes)를 만드는 것부터 시작
간단한 플롯을 그리기 위해 MATLAB 스타일의 인터페이스를 사용하면 더 간편
여러 개의 라인을 한 화면에 그리고 싶다면 단순히 plot 함수를 여러 번 사용
축의 범위를 지정하는 가장 기본적인 명령은 plt.xlim()과 plt.ylim() 메소드
축의 상하 또는 좌우를 반전시켜야 한다면 인수의 순서를 바꾸기
x축과 y축을 동시에 지정하는 방법으로 plt.axis() 메소드
인자로 [x축 최소값, x축 최대값, y축 최소값, y축 최대값] 쌍을 리스트로 전달하여 축의 범위를 설정
괄호 안에 전달하는 인자는 {"log", "linear", "symlog", "logit"}
plt.scatter와 plt.plot의 차이점은 plt.scatter 메소드는 개별 점의 속성(크기, 색상, 모서리 색상 등)을 섬세하게 제어할 수 있다는 것

서브플롯을 각각 생성하는 subplot() 함수, 서브플롯을 한꺼번에 생성하는 subplots() 함수,
복잡한 형태의 서브플롯을 생성하는 GridSpec() 함수
서브플롯은 하나의 큰 그림 내부에 있는 작은 그림이라는 의미
서브플롯을 생성할 때 그리드의 형태를 지정하는 인수를 전달할 수 있습니다. 인수는 (행의 개수, 열의 개수, 서브플롯 번호) 형태
plt.subplot과 plt.subplots를 사용하면 모두 격자형태의 다중서브플롯 그리기 가능
복잡한 형태와 크기의 서브플롯을 생성하기 위해서는 ``plt.GridSpec()``를 사용
